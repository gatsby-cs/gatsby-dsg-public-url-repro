diff --git a/node_modules/gatsby-source-filesystem/extend-file-node.js b/node_modules/gatsby-source-filesystem/extend-file-node.js
index 6398ae2..554dd2a 100644
--- a/node_modules/gatsby-source-filesystem/extend-file-node.js
+++ b/node_modules/gatsby-source-filesystem/extend-file-node.js
@@ -34,18 +34,31 @@ module.exports = ({
         const publicPath = path.join(process.cwd(), `public`, `static`, fileName);
 
         if (!fs.existsSync(publicPath)) {
-          fs.copySync(details.absolutePath, publicPath, {
-            dereference: true
-          }, err => {
-            if (err) {
-              reporter.panic({
-                id: prefixId(CODES.MissingResource),
-                context: {
-                  sourceMessage: `error copying file from ${details.absolutePath} to ${publicPath}`
-                }
-              }, err);
+          try {
+            console.log(`steps: 1`)
+            const file = fs.readFileSync(details.absolutePath);
+            console.log(`steps: 2`)
+            const ensuredDir = path.parse(publicPath).dir;
+            console.log(`steps: 3`)
+            fs.ensureDirSync(ensuredDir);
+            console.log(`steps: 4`)
+            fs.writeFileSync(publicPath, file);
+            console.log(`steps: 5`)
+          } catch (error) {
+            console.log(`error type`, typeof error)
+            console.log(require(`util`).inspect({ inspect: error }, { depth: Infinity }))
+            if (Array.isArray(error)) {
+              for (const e of error) {
+                console.log({ error: e, stack: e?.stack})
+              }
             }
-          });
+            reporter.panic({
+              id: prefixId(CODES.MissingResource),
+              context: {
+                sourceMessage: `error copying file from ${details.absolutePath} to ${publicPath}`
+              }
+            }, error);
+          }
         }
 
         return `${pathPrefix}/static/${fileName}`;
